{"remainingRequest":"F:\\Coding\\Github\\rezanii.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Coding\\Github\\rezanii.github.io\\src\\views\\skills.vue?vue&type=template&id=0754c5dc&scoped=true&","dependencies":[{"path":"F:\\Coding\\Github\\rezanii.github.io\\src\\views\\skills.vue","mtime":1676956389970},{"path":"F:\\Coding\\Github\\rezanii.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676956358761},{"path":"F:\\Coding\\Github\\rezanii.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1676956386585},{"path":"F:\\Coding\\Github\\rezanii.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676956358761},{"path":"F:\\Coding\\Github\\rezanii.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1676956386580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}